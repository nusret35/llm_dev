
{
  "title":"Lecture 10 Outline",
  "content":" Introduction Today: Routing, some addressing. Enormous growth of Internet =\u0026gt; routing protocols redesigned to scale, and also to enforce policy. Problem: DV and LS don\u0026rsquo;t scale to the Internet. DV = Low overhead, but convergence time is proportional to longest path. Good for small networks. LS = Fast convergence, but high overhead because of flooding. Good for MIT-sized networks, but not the Internet. (Three Ways We Deal With) Scale Path-vector routing Like DV, but include the full path in the routing advertisements. Overhead increases (advs are larger), but convergence time decreases (avoid counting to infinity). Overhead is still lower than LS\u0026rsquo;s. Routing hierarchy Internet is divided into Autonomous Systems (ASes). ASes are universities, ISPs, government branches, etc. Each AS has a unique ID (its AS number). There are tens of thousands of them (but not billions). Use one routing protocol to route across ASes, and a different protocol to route within ASes. Implies that there are devices on the edge of each AS that can \u0026ldquo;translate\u0026rdquo; between or \u0026ldquo;speak\u0026rdquo; both protocols. BGP is the path-vector protocol used across ASes. Topological addressing Despite being between ASes, BGP still routes to IP addresses (e.g., to 18.0.0.1, not to AS3). Addresses are given to ASes in contiguous blocks, so that they can be specified succinctly via a particular notation (\u0026ldquo;CIDR\u0026rdquo; notation). Keeps advertisements small(er than they would be otherwise). Policy Routing ASes also want to implement policy; they want \u0026ldquo;policy routing\u0026rdquo;. Policy routing: Switches make routing decisions based on some set of policies set by a human. Routing protocol must disseminate enough information to enable those policies. What policies are typical in BGP? ASes don\u0026rsquo;t want to send traffic on a path unless they have financial incentive to do so. Mechanism of enforcement: Selective advertisements. AS1 won\u0026rsquo;t tell AS2 about a path unless it will make money by letting AS2 use the path. =\u0026gt; Each AS will have a different view of the network, and that view will (almost certainly) *not* contain every physical link. Typical BGP Relationships (which will eventually lead us to typical BGP policies) Customer/provider Customers pay for access (transit), which the provider provides. Peers Peers provide mutual access to a subset of each other\u0026rsquo;s routing tables, namely, the subset that contains their transit customers. Why peer? Can save money and improve performance. Sometimes, it may be the only way to connect your customers to some part of the Internet. Why *not* peer? You\u0026rsquo;d rather have customers. BGP Relationships =\u0026gt; BGP Export Policies First decision: Which routes do I advertise to which neighbors? These are an AS\u0026rsquo;s \u0026ldquo;export policies.\u0026rdquo; High-level: \u0026ldquo;Tell everyone about yourself (your internal IPs) and your customers; tell your customer about everyone.\u0026rdquo; More specifically: Providers export customer\u0026rsquo;s routes to everyone. A customer exports its provider\u0026rsquo;s routes to *its* customers. These two should make sense: Since the customer is paying for Internet, the provider should give them a route to as many destinations as possible. Similarly, the provider should allow *other* parts of the network to reach its customers. AS exports *only* customer routes to peers. Why not full table? AS doesn\u0026rsquo;t want to provide transit for its peers; they\u0026rsquo;re not paying it for transit. Z will tell X about C; C is a customer of Z, and X and Z are peers. X will tell Z, Y, and T about C1, C2, and C3. Y will tell X about D. X will *not* tell Y about C; it makes no money to provide transit from Y to C. X doesn\u0026rsquo;t tell Y about T; it would lose money to provide transit from Y to T. In example, Y appears disconnected from part of the network. BGP doesn\u0026rsquo;t prevent this. In practice, it never happens. Almost every AS is a customer of someone else (i.e., Y would buy transit from someone). Typically: Small ASes buy Internet from Tier-3 ISPs, which buy Internet from Tier-2 ISPs, which buy Internet from Tier-1 ISPs. Tier-1\u0026rsquo;s are huge; there are only a handful (10-15). Additionally, all Tier-1 ISPs peer with one another. So each Tier-1 ISP can provide global connectivity. This is an example where we need peering in order to reach part of the Internet. BGP Relationships =\u0026gt; BGP Import Policies If an AS hears about a route to X from multiple neighbors, how does it decide? These are its \u0026ldquo;import policies.\u0026rdquo; First: Make money. Prefer routes via customers—which you make money on—to routes via peers —which you don\u0026rsquo;t make, but don\u0026rsquo;t lose money on—to routes via providers—which you lose money on. In the case of a tie (which happens often): There are a whole host of other attributes that BGP provides. A common one is AS-hop-count. Each AS sets its own policies. BGP in Light of Distributed Routing HELLO protocol: BGP sends KEEPALIVE messages to neighbors. Advertisements: Sent to neighbors. Look different depending on which neighbor. BGP runs on top of TCP, a reliable-transport protocol. Doesn\u0026rsquo;t have to do periodic advertisements to handle failure. Instead, push advs when routes change. Integration: Via policies described above. Failures: Routes can be explicitly withdrawn in BGP when they fail. Routing loops avoided because BGP is path-vector. Problems With BGP Does it scale? Well, it works on the Internet. But… BGP routing tables are getting big (exceeding the amount of memory dedicated to the table in some switches). We see route instability due to misconfigurations or conflicting AS policies. \u0026ldquo;Route-flap damping\u0026rdquo; (ignore advs about frequently-changing routes) helps with this, but increases convergence time. ASes can multi-home: Buy Internet from more than one ISP, usually for back-up or load-balancing. More multi-homed networks =\u0026gt; bigger routing tables. The load-balancing itself is also tricky. iBGP. An AS actually has multiple BGP routers on its edge, and a protocol called iBGP keeps them all in sync. iBGP requires an AS\u0026rsquo;s BGP routers to be connected in a complete graph, and so it doesn\u0026rsquo;t scale particularly well. Basically: Internet has grown enough that scalability of BGP is becoming a concern. Is it secure? Goodness no. ASes can advertise about a prefix that they don\u0026rsquo;t actually own. Similar problem (and solution) as in DNS. We\u0026rsquo;ll talk more about it after spring break. Is it secure? The protocol itself: Arguably yes. BGP in practice: No. Again, mo\u0026rsquo; money, mo\u0026rsquo; problems. Also, human operator error due to the complexity of setting the policies. "}


