 
  
  6.033 Spring 2018
Lecture #2 
•Naming in systems
•Case study: DNS
6.033 | spring 2018 | Katrina LaCurts 
1     
  
   
 
  Last Time: Enforced Modularity via Client/Server Model 
Client Server internet 
load(kaws.com/buy.html?socks)
X 
load(kaws.com/buy.html?socks)state on server 
client | UID | reply 
replay results from table 
Today: Naming 
allows modules to interact 
6.033 | spring 2018 | Katrina LaCurts 
2  
  Examples of Names 
example. com 
userA@ example. com 
userA 
R0 
main 
WebBrowser 
/mit/6.033/schedule.shtml 
http://example.com/about 
617- 555-1234 
128.30.2.121 hostname 
email 
username 
x86 register name 
function name 
class name 
path name URL 
phone number 
IP Address 
6.033 | spring 2018 | Katrina LaCurts 
3  why use names? 
6.033 | spring 2018 | Katrina LaCurts 
4               
    
© source unknown. All rights reserved. This content is excluded from our Creative Commons license. 
For more information, see https://ocw.mit.edu/help/faq-f air-use. 
6.033 | spring 2018 | Katrina LaCurts 
5  why use names? 
6.033 | spring 2018 | Katrina LaCurts 
6 
    
    
  
   
  Naming Schemes 
1.Set of all possible names
2.Set of all poss
ible values
3.Look -up algorithm to tra n
slate a n ame into a value
(or set of values, or “none”)
6.033 | spring 2018 | Katrina LaCurts 
7  
  
  
       
      
    
  Domain Name System 
1.names: hostnames ( web.mit.edu)
2.values: IP address
es (18.9.22.69 )
IP addresses are imbued with location information: routers 
can send packets to an IP address, but not to a hostname 
3.look -up algorithm: resolves a ho stname to an IP
address so that your machine knows where to send
data
6.033 | spring 2018 | Katrina LaCurts 
8 
  
  DNS Hierarchy
(a partial view) 
root 
com edu net org gov 
apple google berkeley mit 
drive mail www csail eecs web www 
people tig 
6.033 | spring 2018 | Katrina LaCurts 
9   
 
  DNS Look -up for web.mit.edu 
root table com. 192.5.6.30 198.41.0.4 root edu. 192.41.162.30 
edu table mit.edu. 18.72.0.3 com 192.41.162.30 edu berkeley.edu. 128.32.136.14 
eecs.mit.edu. 18.62.1.6 mit web.mit.edu. 18.9.2.69 berkeley 18.72.0.3 mit table www.mit.edu. 18.9.22.169
www web eecs 
18.9.2.69 
query to: 192.41.162.30 result: web.mit.edu.318.9.2.69  
6.033 | spring 2018 | Katrina LaCurts 
10 
  
  DNS Hierarchy
(a partial view) 
root 
com edu net org gov 
apple google berkeley mit 
drive mail www csail eecs web www 
people tig 
6.033 | spring 2018 | Katrina LaCurts 
11       
    
   
            
 
  •Modularity (and abstraction) limit complexity. One way
to enforce modularity is to use a client/server design
•Naming is what allows modules — for example, a client
and a server — to communicate; it is pervasive across
systems
•DNS maps hostnames to IP addresses. It is also a good
example of hierarchy .
6.033 | spring 2018 | Katrina LaCurts 
12 
           
     
    
  Lingering Problem 
Client Server internet 
load(amazon.com/buy.html?car)
what if we don’t want our modules to be on entirely
separate machines? how can we enforce 
modularity on a single machine ? 
6.033 | spring 2018 | Katrina LaCurts 
13 
 
 
             
 MIT OpenCourseWare 
https://ocw.mit.edu 
6.033 Computer System Engineering
Spring 2018 
For information about citing these materials or our Terms of Use, visit: https: //ocw.mit.edu/terms. 
14